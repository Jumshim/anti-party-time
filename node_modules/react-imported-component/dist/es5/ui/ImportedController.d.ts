import React from 'react';
interface ImportedState {
    usesHydration: boolean;
    pastHydration: boolean;
}
export declare const importedState: React.Context<ImportedState | undefined>;
export declare const HydrationState: React.FC<{
    state: ImportedState;
}>;
/**
 * @see [LazyBoundary]{@link LazyBoundary} - HydrationController is required for LazyBoundary to properly work with React>16.10
 * Established a control over LazyBoundary suppressing fallback during the initial hydration
 * @param props
 * @param [props.usesHydration=true] determines of Application is rendered using hydrate
 */
export declare const ImportedController: React.FC<{
    /**
     * determines of Application is rendered using hydrate
     */
    usesHydration?: boolean;
}>;
export {};
